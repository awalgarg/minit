.TH ftrigger 1
.SH NAME
ftrigger \- trigger an action if a file changes
.SH SYNOPSIS
.B ftrigger [-v] @command filename [@command filename...]

.SH DESCRIPTION
.B ftrigger
can watch a list of files and run shell commands if they change.

.B ftrigger
uses the inotify kernel notification mechanism, so it triggers in real
time.  ftrigger will trigger when the file is closed after it was opened
for writing to avoid race conditions when the file is not fully written.

.SH EXAMPLES

% ftrigger '@msvc -h sshd' /etc/sshd_config

This will watch /etc/sshd_config, and if it changes, msvc will send a
SIGHUP to the sshd service.

It is also possible to watch more than one file at a time:

% ftrigger '@echo updated' /tmp/a /tmp/b

And it is possible to watch multiple files with different triggers:

% ftrigger '@echo a updated' /tmp/a '@echo b updated' /tmp/b

.SH "RACE CONDITION"

The inotify API has an inherent race condition.  ftrigger has to watch
both the file and the directory it is in for changes.  If the file is
newly created, ftrigger will receive a notification via the directory,
and will then add a watch to the newly created file, to get notified if
somebody closes the file who had it open for writing.

If the other process closes the file before ftrigger has a chance to add
the watch on the file, ftrigger will never get notified.  In practice, I
have only seen this happen with touch, where the open(3) is immediately
followed by the close(3), and there is no write(3) in the middle.

.SH AUTHOR
ftrigger was written by Felix von Leitner and can be downloaded from
.I http://www.fefe.de/minit/

